import numpy as np
import matplotlib.pyplot as plt

def rectangular_convolution(t, S, T):
    y = np.zeros_like(t)
    for i, ti in enumerate(t):
        if ti < -(S + T) or ti > (S + T):
            y[i] = 0
        elif -(S + T) <= ti <= -(S - T):
            y[i] = ti + S + T
        elif -(S - T) <= ti <= (S - T):
            y[i] = 2 * T
        elif (S - T) <= ti <= (S + T):
            y[i] = S + T - ti
    return y

S = 2
T = 1
t = np.linspace(-6, 6, 1000)
y = rectangular_convolution(t, S, T)

plt.figure(figsize=(8, 4))
plt.plot(t, y, label=f"T = {T}", color='royalblue')
plt.title("Convolution y(t) of Rectangular Input with Symmetric Kernel")
plt.xlabel("t")
plt.ylabel("y(t)")
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.show()
